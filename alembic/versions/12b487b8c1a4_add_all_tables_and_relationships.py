"""add all tables and relationships

Revision ID: 12b487b8c1a4
Revises: 5c63b45ff31c
Create Date: 2024-10-27 13:46:22.474157

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '12b487b8c1a4'
down_revision: Union[str, None] = '5c63b45ff31c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('puntorecoleccion',
    sa.Column('direccion', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('detalles', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recoleccionparticular',
    sa.Column('metraje', sa.Float(), nullable=False),
    sa.Column('tipo_documento_responsable', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('documento_responsable', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('nombre_responsable', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email_responsable', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rol',
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tiporesiduo',
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tiporuta',
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vehiculo',
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ruta',
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('distancia', sa.Float(), nullable=False),
    sa.Column('detalles', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tipo_ruta_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['tipo_ruta_id'], ['tiporuta.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usuario',
    sa.Column('rol_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['rol_id'], ['rol.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('barrido',
    sa.Column('fecha_inicio', sa.DateTime(), nullable=False),
    sa.Column('fecha_fin', sa.DateTime(), nullable=False),
    sa.Column('peso', sa.Float(), nullable=False),
    sa.Column('observaciones', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('detalle', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ruta_id', sa.Uuid(), nullable=False),
    sa.Column('tipo_residuo_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['ruta_id'], ['ruta.id'], ),
    sa.ForeignKeyConstraint(['tipo_residuo_id'], ['tiporesiduo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('puntorecoleccionruta',
    sa.Column('punto_recoleccion_id', sa.Uuid(), nullable=False),
    sa.Column('ruta_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['punto_recoleccion_id'], ['puntorecoleccion.id'], ),
    sa.ForeignKeyConstraint(['ruta_id'], ['ruta.id'], ),
    sa.PrimaryKeyConstraint('punto_recoleccion_id', 'ruta_id')
    )
    op.create_table('usuariobarrido',
    sa.Column('usuario_id', sa.Uuid(), nullable=False),
    sa.Column('barrido_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['barrido_id'], ['barrido.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('usuario_id', 'barrido_id')
    )
    op.create_table('usuariorecoleccion',
    sa.Column('id_usuario', sa.Uuid(), nullable=False),
    sa.Column('id_recoleccion', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id_recoleccion'], ['recoleccion.id'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id_usuario', 'id_recoleccion')
    )
    op.create_foreign_key(None, 'recoleccion', 'ruta', ['ruta_id'], ['id'])
    op.create_foreign_key(None, 'recoleccion', 'tiporesiduo', ['tipo_residuo_id'], ['id'])
    op.create_foreign_key(None, 'recoleccion', 'vehiculo', ['vehiculo_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'recoleccion', type_='foreignkey')
    op.drop_constraint(None, 'recoleccion', type_='foreignkey')
    op.drop_constraint(None, 'recoleccion', type_='foreignkey')
    op.drop_table('usuariorecoleccion')
    op.drop_table('usuariobarrido')
    op.drop_table('puntorecoleccionruta')
    op.drop_table('barrido')
    op.drop_table('usuario')
    op.drop_table('ruta')
    op.drop_table('vehiculo')
    op.drop_table('tiporuta')
    op.drop_table('tiporesiduo')
    op.drop_table('rol')
    op.drop_table('recoleccionparticular')
    op.drop_table('puntorecoleccion')
    # ### end Alembic commands ###
