"""add table recoleccion

Revision ID: 5c63b45ff31c
Revises: 
Create Date: 2024-10-27 11:24:37.482338

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '5c63b45ff31c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recoleccion',
    sa.Column('fecha_inicio', sa.DateTime(), nullable=False),
    sa.Column('fecha_fin', sa.DateTime(), nullable=False),
    sa.Column('peso', sa.Float(), nullable=False),
    sa.Column('observaciones', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('detalle', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('vehiculo_id', sa.Uuid(), nullable=False),
    sa.Column('ruta_id', sa.Uuid(), nullable=False),
    sa.Column('tipo_residuo_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('Barridos')
    op.drop_table('RecoleccionResiduos')
    op.drop_table('TipoResiduos')
    op.drop_table('Toxicos')
    op.drop_table('ResiduosToxicos')
    op.drop_table('Rutas')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Rutas',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('codigo_ruta', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('tipo_ruta', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='Rutas_pkey'),
    comment='Define las rutas disponibles',
    postgresql_ignore_search_path=False
    )
    op.create_table('ResiduosToxicos',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('fecha', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('tipo_documento', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('numero_identificacion', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hora_entrada', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('hora_salida', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('placa_vehiculo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('conductor', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('nombres_auxiliares', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('metraje', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cantidad', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('detalle', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('observacion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='ResiduosToxicos_pkey'),
    comment='Registra informacion sobre la recoleccion de residuos particulares o toxicos'
    )
    op.create_table('Toxicos',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('tipo_toxico', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='Toxicos_pkey'),
    comment='Registra los diferentes tipos de residuos toxicos'
    )
    op.create_table('TipoResiduos',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('descripcion', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('categoria', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='TipoResiduos_pkey'),
    comment='Define los diferentes tipos de residuos'
    )
    op.create_table('RecoleccionResiduos',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('fecha', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('placa_vehiculo', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('inicio', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('finalizacion', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('tipo', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('cantidad', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('peso_bascula', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('conductor', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('nombres_auxiliares', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('detalle', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('observacion', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('ruta_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ruta_id'], ['Rutas.id'], name='RecoleccionResiduos_ruta_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='RecoleccionResiduos_pkey'),
    comment='Registra informacion sobre la recoleccion de residuos'
    )
    op.create_table('Barridos',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('fecha', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('inicio', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('finalizacion', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('tipo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cantidad', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('observacion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('detalle', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ruta_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ruta_id'], ['Rutas.id'], name='Barridos_ruta_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Barridos_pkey'),
    comment='Registra informacion dobre los barridos realizados'
    )
    op.drop_table('recoleccion')
    # ### end Alembic commands ###
